@using TestProjectFrontEnd.Services;
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">DJ Valeting</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <button class="btn btn-primary" @onclick="HandleLoginLogout">@LoginLogoutButtonText</button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="new-booking">
                <span class="oi oi-plus" aria-hidden="true"></span> New Booking
            </NavLink>
        </div>
        @if (isLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="booking-list">
                    <span class="oi oi-list" aria-hidden="true"></span> Booking List
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool isLoggedIn = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private string LoginLogoutButtonText => isLoggedIn ? "Log Out" : "Log In";

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task HandleLoginLogout()
    {
        if (isLoggedIn)
        {
            // Clear the token and log out
            await TokenService.RemoveTokenAsync();
            isLoggedIn = false;
        }
        NavigationManager.NavigateTo("/login", true);

    }

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    [Inject]
    private ITokenService TokenService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Check if the user is logged in based on the presence of a token
        isLoggedIn = await TokenService.IsLoggedInAsync();
    }
}
